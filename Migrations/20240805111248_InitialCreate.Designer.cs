// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RTS.EntityFramework;

#nullable disable

namespace RTS.Migrations
{
    [DbContext(typeof(RecruitmentDbContext))]
    [Migration("20240805111248_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RTS.Models.ApplicationStage", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationStageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_ApplicationStage");

                    b.ToTable("ApplicationStage", (string)null);
                });

            modelBuilder.Entity("RTS.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResumeLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_Candidate");

                    b.ToTable("Candidate", (string)null);
                });

            modelBuilder.Entity("RTS.Models.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Employer");

                    b.ToTable("Employer", (string)null);
                });

            modelBuilder.Entity("RTS.Models.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationStageId")
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int?>("RecruiterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ApplicationId");

                    b.HasIndex("ApplicationStageId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("RecruiterId");

                    b.HasIndex("VacancyId");

                    b.ToTable("JobApplication", (string)null);
                });

            modelBuilder.Entity("RTS.Models.Recruiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_RecruiterId");

                    b.HasIndex("EmployerId");

                    b.ToTable("Recruiter", (string)null);
                });

            modelBuilder.Entity("RTS.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DatePosted")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EducationReq")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EmployerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("EmploymentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExperienceReq")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RecruiterId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Vacancy");

                    b.HasIndex("EmployerId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("Vacancy", (string)null);
                });

            modelBuilder.Entity("RTS.Models.JobApplication", b =>
                {
                    b.HasOne("RTS.Models.ApplicationStage", "ApplicationStage")
                        .WithMany("JobApplications")
                        .HasForeignKey("ApplicationStageId")
                        .IsRequired()
                        .HasConstraintName("FK_Application_Stage");

                    b.HasOne("RTS.Models.Candidate", "Candidate")
                        .WithMany("JobApplications")
                        .HasForeignKey("CandidateId")
                        .IsRequired()
                        .HasConstraintName("FK_Application_Candidate");

                    b.HasOne("RTS.Models.Recruiter", null)
                        .WithMany("JobApplications")
                        .HasForeignKey("RecruiterId");

                    b.HasOne("RTS.Models.Vacancy", "Vacancy")
                        .WithMany("JobApplications")
                        .HasForeignKey("VacancyId")
                        .IsRequired()
                        .HasConstraintName("FK_Application_Vacancy");

                    b.Navigation("ApplicationStage");

                    b.Navigation("Candidate");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("RTS.Models.Recruiter", b =>
                {
                    b.HasOne("RTS.Models.Employer", "Employer")
                        .WithMany("Recruiters")
                        .HasForeignKey("EmployerId")
                        .HasConstraintName("FK_Recruiter_Employer");

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("RTS.Models.Vacancy", b =>
                {
                    b.HasOne("RTS.Models.Employer", "Employer")
                        .WithMany("Vacancies")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Vacancy_Employer");

                    b.HasOne("RTS.Models.Recruiter", "Recruiter")
                        .WithMany("Vacancies")
                        .HasForeignKey("RecruiterId")
                        .HasConstraintName("FK_Vacancy_Recruiter");

                    b.Navigation("Employer");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("RTS.Models.ApplicationStage", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("RTS.Models.Candidate", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("RTS.Models.Employer", b =>
                {
                    b.Navigation("Recruiters");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("RTS.Models.Recruiter", b =>
                {
                    b.Navigation("JobApplications");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("RTS.Models.Vacancy", b =>
                {
                    b.Navigation("JobApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
